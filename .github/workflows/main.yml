name: Go CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Calculate new version
        id: semver
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Current tag: $latest_tag"
          
          # Remove 'v' prefix for version calculation
          version=${latest_tag#v}
          IFS='.' read -r major minor patch <<< "$version"
          
          # Increment patch version
          new_patch=$((patch + 1))
          new_tag="v$major.$minor.$new_patch"
          
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
          echo "New tag will be: $new_tag"

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        run: |
          gh release create ${{ steps.semver.outputs.new_tag }} \
            --title "Release ${{ steps.semver.outputs.new_tag }}" \
            --notes "## What's Changed
          $(git log -1 --pretty=format:%s)
          
          **Full Changelog**: https://github.com/${{ github.repository }}/commits/${{ steps.semver.outputs.new_tag }}"

  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.23

      - name: Install dependencies
        run: go mod download

  test:
    runs-on: ubuntu-latest
    needs: setup

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: event-driven
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U root"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:6.2
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.23

      - name: Run tests
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: event-driven
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          REDIS_ADDR: localhost:6379
        run: go test ./...

  build:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.23

      - name: Build application
        run: go build -v ./...